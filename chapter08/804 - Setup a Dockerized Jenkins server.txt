# Setup a Dockerized Jenkins server

# Using a node that had docker installed
docker version

clear

# Setup volume location to store Jenkins configuration
mkdir $HOME/jenkins_home

# change owner to jenkins user
chown 1000 $HOME/jenkins_home

# Deploy a Jenkins server that is configured to build Docker images
\
docker container run -d -p 8080:8080 -p 50000:50000 \
-v $HOME/jenkins_home:/var/jenkins_home \
--name jenkins --rm jenkins/jenkins:lts

# browse to the Jenkins server

# we need connect to our Jenkins container to get the admin password
docker container exec -it -u root jenkins /bin/bash
cat /var/jenkins_home/secrets/initialAdminPassword

# login, select plugins, and create user

# create our first jenkins job (like we did in previous example)
// Our hello world pipeline script, named "hello-test"
node {
   stage('Say Hello') {
      echo 'Hello Docker Quick Start Guide Readers!'
   }
}

# run the job

# create a jenkins job that uses Docker
// Our Docker hello world pipeline script, named "hello-docker-test"
node {
   stage('Hello via Alpine') {
      docker.image('alpine:latest').inside {
         sh 'echo Hello DQS Readers - from inside an alpine container!'
      }
   }
}

# run the job

# it appears that the official jenkins server container image is NOT configured to use Docker!
